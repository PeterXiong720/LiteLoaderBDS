// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class StructurePoolBlockPredicateTrueIfFound {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_STRUCTUREPOOLBLOCKPREDICATETRUEIFFOUND
public:
    class StructurePoolBlockPredicateTrueIfFound& operator=(class StructurePoolBlockPredicateTrueIfFound const &) = delete;
    StructurePoolBlockPredicateTrueIfFound(class StructurePoolBlockPredicateTrueIfFound const &) = delete;
    StructurePoolBlockPredicateTrueIfFound() = delete;
#endif

public:
    /*0*/ virtual ~StructurePoolBlockPredicateTrueIfFound();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual bool test(class Block const &, class Randomize &) const;
    /*
    inline bool test(class BlockPos const & a0, class BlockPos const & a1, class Randomize & a2) const{
        bool (StructurePoolBlockPredicateTrueIfFound::*rv)(class BlockPos const &, class BlockPos const &, class Randomize &) const;
        *((void**)&rv) = dlsym("?test@StructurePoolBlockPredicateTrueIfFound@@UEBA_NAEBVBlockPos@@0AEAVRandomize@@@Z");
        return (this->*rv)(std::forward<class BlockPos const &>(a0), std::forward<class BlockPos const &>(a1), std::forward<class Randomize &>(a2));
    }
    */
    MCAPI StructurePoolBlockPredicateTrueIfFound(class std::set<class Block const *, struct std::less<class Block const *>, class std::allocator<class Block const *>> const &, float);

protected:

private:

};