// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class BrazeSDKManager {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BRAZESDKMANAGER
public:
    class BrazeSDKManager& operator=(class BrazeSDKManager const &) = delete;
    BrazeSDKManager(class BrazeSDKManager const &) = delete;
    BrazeSDKManager() = delete;
#endif

public:
    /*0*/ virtual ~BrazeSDKManager();
    /*
    inline void setBrazeId(std::string const & a0){
        void (BrazeSDKManager::*rv)(std::string const &);
        *((void**)&rv) = dlsym("?setBrazeId@BrazeSDKManager@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z");
        return (this->*rv)(std::forward<std::string const &>(a0));
    }
    inline void _enableBrazeSDK(){
        void (BrazeSDKManager::*rv)();
        *((void**)&rv) = dlsym("?_enableBrazeSDK@BrazeSDKManager@@MEAAXXZ");
        return (this->*rv)();
    }
    inline void _disableBrazeSDK(){
        void (BrazeSDKManager::*rv)();
        *((void**)&rv) = dlsym("?_disableBrazeSDK@BrazeSDKManager@@MEAAXXZ");
        return (this->*rv)();
    }
    */

protected:

private:

};