// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"
#include "persona.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class SerializedSkin {

#define AFTER_EXTRA
// Add Member There
    char filler[620];
#undef AFTER_EXTRA

public:
    MCAPI SerializedSkin(class SerializedSkin &&);
    MCAPI SerializedSkin();
    MCAPI SerializedSkin(class SerializedSkin const &);
    MCAPI SerializedSkin(std::string const &, std::string const &, std::string const &, struct mce::Image const &, unsigned short const &, unsigned short const &, struct mce::Image const &, unsigned short const &, unsigned short const &, class Json::Value &&, class SemVersion const &, std::string const &, std::string const &, bool, bool, bool, bool, bool);
    MCAPI SerializedSkin(class ConnectionRequest const &);
    MCAPI SerializedSkin(class SubClientConnectionRequest const &);
    MCAPI float getAnimationFrames(enum persona::AnimatedTextureType) const;
    MCAPI std::string const & getName() const;
    MCAPI bool isTrustedSkin() const;
    MCAPI class SerializedSkin & operator=(class SerializedSkin const &);
    MCAPI bool read(class ReadOnlyBinaryStream &);
    MCAPI void setIsTrustedSkin(bool);
    MCAPI void updateGeometryName();
    MCAPI bool useBlinkingAnimation() const;
    MCAPI void write(class BinaryStream &) const;
    MCAPI ~SerializedSkin();

protected:

private:

};